% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DPMUnc.R
\name{DPMUnc}
\alias{DPMUnc}
\title{DPMUnc - Run Dirichlet Process Mixture Modeller taking uncertainty of data points into account}
\usage{
DPMUnc(
  obsData,
  obsVars,
  saveFileDir,
  seed,
  K = floor(nrow(obsData)/2),
  nIts = 1e+05,
  thinningFreq = 10,
  saveClusterParams = TRUE,
  saveLatentObs = FALSE,
  quiet = TRUE
)
}
\arguments{
\item{obsData}{The observed data in matrix form (n observations x p variables)}

\item{obsVars}{The observed variances of the data (n observations x p variables)}

\item{saveFileDir}{Directory where all output will be saved}

\item{seed}{Seed for random number generator, to make the function deterministic.}

\item{K}{Initial number of clusters.}

\item{nIts}{Total number of iterations to run. The user should check they are happy
that the model has converged before using any of the results.}

\item{thinningFreq}{Controls how many samples are saved. E.g. a value of 10 means
every 10th sample will be saved.}

\item{saveClusterParams}{Boolean, determining whether the cluster parameters (mean
and variance of every cluster) for every saved iteration should be saved in a file or not.
Both cluster parameters and latent observations take up more space than other saved variables.
The files clusterVars.csv and clusterMeans.csv will be created in either case, but
will be left empty if saveClusterParams is FALSE.}

\item{saveLatentObs}{Boolean, determining whether the latent observations (underlying true observations)
for every saved iteration should be saved in a file or not. Both cluster parameters and
latent observations take up more space than other saved variables.
The file latentObservations.csv will be created in either case, but
will be left empty if saveLatentObs is FALSE.}

\item{quiet}{Boolean. If FALSE, information will be printed to the terminal including
current iteration, current value of K and number of items per cluster.}
}
\description{
DPMUnc - Run Dirichlet Process Mixture Modeller taking uncertainty of data points into account
}
\examples{
n = 50; d = 5; k = 4
classes = sample(1:k, n, replace=TRUE)
group_means = matrix(rep(classes, d), n, d)
true_means = group_means + matrix(rnorm(n*d, sd=0.1),n,d)
obsVars = matrix(rchisq(n*d,1), n, d)
obsData = matrix(rnorm(n*d, mean=as.vector(true_means), sd=sqrt(as.vector(obsVars))), n, d)
DPMUnc(obsData, obsVars, "test_output", 1234)
}
